name: GitHub Snake Game

on:
  # Schedule the workflow to run daily at midnight UTC
  schedule:
    - cron: "0 0 * * *"

  # Allow manual triggering of the workflow
  workflow_dispatch:

  # Trigger the workflow on pushes to the main branch
  push:
    branches:
      - main

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    # Add permissions explicitly for enhanced security and clarity
    permissions:
      contents: write # Needed for actions-gh-pages to push to output branch

    steps:
      # Step 1: Checkout the repository
      # Updated to v4 for the latest features and security patches
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Generate the snake animations
      - name: Generate GitHub Contributions Snake Animations
        # Keep Platane/snk@v3 as it's the current recommended version for svg-only or this combined approach
        uses: Platane/snk@v3
        with:
          # GitHub username to generate the animation for
          github_user_name: OxMxDev # <--- Your username here!

          # Define the output files and their configurations
          outputs: |
            dist/github-snake.svg
            dist/github-snake-dark.svg?palette=github-dark
            dist/ocean.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9
        # The GITHUB_TOKEN environment variable is not typically needed directly for Platane/snk
        # unless you are hitting very strict rate limits or private repos, but it doesn't hurt.
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This line can usually be removed for public repos/actions.

      # Step 3: Deploy the generated files to the 'output' branch
      # Updated to v4 for the latest features and security patches
      - name: Deploy to Output Branch
        uses: peaceiris/actions-gh-pages@v4 # Updated to v4
        with:
          # The GITHUB_TOKEN is crucial here for authentication to push
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: output
          # Optionally, you can set a custom commit message
          commit_message: "Update snake animation [skip ci]"
